#!/bin/bash

### BEGIN INIT INFO
# Provides: domoslave
# Required-Start: $local_fs $network $syslog $remote_fs knxd
# Required-Stop: $local_fs $syslog $remote_fs
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# X-Interactive: true
# Short-Description: Domoleaf slave daemon for D3 boxes
# description: Domoleaf slave daemon running on D3 boxes to communicate with KNX, EnOcean, Upnp. Receives and sends datas to master daemon.
### END INIT INFO

PATH="$PATH"
DAEMON="/usr/bin/domoslave.py"
MONITOR_KNX="/usr/bin/monitor_knx"
MONITOR_ENOCEAN="/usr/bin/monitor_enocean"

PID_FILE_SLAVE="/var/run/domoslave.pid"
PID_FILE_MONITOR_KNX="/var/run/monitor_knx.pid"
PID_FILE_MONITOR_ENOCEAN="/var/run/monitor_enocean.pid"

LOG_FILE_SLAVE="/var/log/domoleaf/domoslave.log"
LOG_FILE_MONITOR_KNX="/var/log/monitor_knx.log"
LOG_FILE_MONITOR_ENOCEAN="/var/log/monitor_enocean.log"

PROG_SLAVE="domoslave"
PROG_MONITOR_KNX="monitor_knx"
PROG_MONITOR_ENOCEAN="monitor_enocean"

MONITOR_KNX_OPTIONS="ip:localhost --daemon 10"
MONITOR_ENOCEAN_OPTIONS="--daemon"

start()
{
	if [ -f $PID_FILE_SLAVE ]; then
		echo "$PROG_SLAVE is already running"
	else
		echo "Starting $PROG_SLAVE"
		$DAEMON > $LOG_FILE_SLAVE 2>&1
	fi
	
	if [ -f $PID_FILE_MONITOR_KNX ]; then
		echo "$PROG_MONITOR_KNX is already running"
	else
		echo "Starting $PROG_MONITOR_KNX"
		$MONITOR_KNX $MONITOR_KNX_OPTIONS > $LOG_FILE_MONITOR_KNX 2>&1
	fi
	if [ -f $PID_FILE_MONITOR_ENOCEAN ]; then
		echo "$MONITOR_ENOCEAN is already running"
	else
		echo "Starting $MONITOR_ENOCEAN"
		$MONITOR_ENOCEAN $MONITOR_ENOCEAN_OPTIONS > $LOG_FILE_MONITOR_ENOCEAN 2>&1
	fi
}

stop()
{
	if [ -f $PID_FILE_SLAVE ]; then
		echo "Stopping $PROG_SLAVE"
		kill -9 `cat $PID_FILE_SLAVE`
	else
		echo "$PROG_SLAVE is not running"
	fi
	if [ -f $PID_FILE_MONITOR_KNX ]; then
		echo "Stopping $PROG_MONITOR_KNX"
		kill -9 `cat $PID_FILE_MONITOR_KNX`
	else
		echo "$PROG_MONITOR_KNX is not running"
	fi
	if [ -f $PID_FILE_MONITOR_ENOCEAN ]; then
		echo "Stopping $PROG_MONITOR_ENOCEAN"
		kill -9 `cat $PID_FILE_MONITOR_ENOCEAN`
	else
		echo "$PROG_MONITOR_ENOCEAN is not running"
	fi
	rm -f $PID_FILE_SLAVE
	rm -f $LOG_FILE_SLAVE
	rm -f $PID_FILE_MONITOR_KNX
	rm -f $LOG_FILE_MONITOR_KNX
	rm -f $PID_FILE_MONITOR_ENOCEAN
	rm -f $LOF_FILE_MONITOR_ENOCEAN
}

restart()
{
	stop
	start
}

status()
{
	if [ -f $PID_FILE_SLAVE ]; then
		echo "$PROG_SLAVE is running"
	else
		echo "$PROG_SLAVE is not running"
	fi
	if [ -f $PID_FILE_MONITOR_KNX ]; then
		echo "$PROG_MONITOR_KNX is running"
	else
		echo "$PROG_MONITOR_KNX is not running"
	fi
	if [ -f $PID_FILE_MONITOR_ENOCEAN ]; then
		echo "$PROG_MONITOR_ENOCEAN is running"
	else
		echo "$PROG_MONITOR_ENOCEAN is not running"
	fi
}

case $1 in
	start)
		start
		;;
	stop)
		stop
		;;
	restart)
		restart
		;;
	status)
		status
		;;
	*)
		echo "Usage: $0 {start | stop | restart | status}"
		RETVAL=2
esac

exit $RETVAL
